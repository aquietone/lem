0.10.0
- Integrate zep editor
0.9.2
- Possible fix to LEM event datatypes disappearing
0.9.1
- Just removing some dead code
0.9.0
- Create single command events without writing code. Single command events allow entering a single slash command to be run when the event fires.
- Added toggle button on event editor/viewer for showing event code.
- Added `/lua run lem safemode` option to start LEM without enabling events.
0.8.2
- Make event lists sortable by name and maybe by on/off
0.8.1
- Fix table serializer in case its ever used differently in the future
0.8.0
- Add LEM TLO, see README for full details
- /echo ${LEM}
- /echo ${LEM.Event[event1].Enabled}
- /echo ${LEM.React[react1].Enabled}
0.7.2
- Unregister mq event when importing over an existing event
0.7.1
- Switch back to persistence.lua for saving settings files
0.7.0
- Remove persistence.lua and use mq.pickle
- Handle rounding errors on base64 encode/decode
- Try a fix for stale event code after failed registrations
0.6.3
- Print require stacktrace when event fails to load
0.6.2
- Remove "'s Corpse" from name when reading/writing character config
0.6.1
- Add Write.lua and update a couple examples to use it
0.6.0
- Add sub-categories (1 level only)
- Prevent deleting a category if it contains any events or sub-categories
- Add broadcast setting for local, dannet, eqbc for event load/unload messages
- Add debug option to right click menu on events, will try to /lua run the event script
0.5.0
- Add enable/disable for all options to right click menu
- This will use dga, dgga or dgga to enable or disable the event based on whether it is currently enabled or disabled for the toon using the menu.
0.4.9
- Handle spaces in event names for "edit in vs code" button
0.4.8
- Add `bg` start parameter to start script with UI hidden
0.4.7
- Change to use init.lua
0.4.6
- Add reload source button
0.4.5
- Fix import/edit event with no load section
0.4.4
- Fix disable event
0.4.3
- Add `Edit in VS Code` button to events
0.4.2
- Dynamic load options (not yet in use)
- Add more templates/samples
0.4.1
- specify on/off on event enable commands
- add some library functions for people to use in events
- add option to select from a template when creating events
0.4.0
- Add ability to import/export events
0.3.1
- Use pcall for calling user defined functions
0.3.0
- Display message when event code fails to load
- Checkbox for enable/disable now displayed in events table
- Only save character specific settings when enabling/disabling an event, instead of all settings
- Save event checks for what changed before deciding whether to save full settings
- Added Categories to group events
- Categories can be created in the Categories section and then assigned when adding/editing events
- Added filtering to events list
- Events list now organized using category based tree nodes
- Removed table sorting in favor of the filter and collapsible categories
0.2.1
- Fix event viewer when event code includes formatted strings
- Add a couple more realistic sample events
0.2.0
- Change events to be indexed by name instead of number index
0.1.0
- Initial check-in
